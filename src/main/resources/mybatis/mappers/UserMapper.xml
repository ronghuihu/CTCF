<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tedu.mapper.UserMapper">
    
    <select id="findUserByUserId" resultType="User">
          SELECT * FROM user_p WHERE user_id=#{userId}
    </select>

    <insert id="addUser">
    	insert into user_p values(
    	  #{userId},
          #{userName},
          #{password},
          #{realName},
          #{cardNo},
          #{telephone},
          #{email},
          #{state},
          #{createTime,jdbcType=DATE},
		  #{updateTime,jdbcType=DATE}
    	)
    </insert>

    <select id="findUserById" resultType="User">
    	select * from user where id=#{id}
    </select>


    <update id="updateUser">
        UPDATE user_p SET
          user_name=#{userName},
          password=#{password,jdbcType=VARCHAR},
          real_name=#{realName},
          card_no=#{cardNo},
          telephone=#{telephone},
          email=#{email},
          state=#{state,jdbcType=INTEGER},
          update_time=#{updateTime,jdbcType=DATE},
          create_time=#{createTime,jdbcType=DATE}
        WHERE user_id=#{userId}
    </update>

    <delete id="deleteUser">
    	delete from user where id=#{id}
    </delete>

    <select id="findAll" resultType="User">
        SELECT * FROM user_p
    </select>
    <select id="findUserByUserName" resultType="User">
        select * from user_p where user_name = #{userName}
    </select>

    <insert id="saveUser">
        INSERT INTO user_p VALUES(
          #{userId},
          #{userName},
          #{password,jdbcType=VARCHAR},
          #{realName},
          #{cardNo},
          #{telephone},
          #{email},
          #{state,jdbcType=INTEGER},
          #{createTime,jdbcType=DATE},
          #{updateTime,jdbcType=DATE}
        )
    </insert>

    <select id="findRoleIdByUserId" resultType="string">
        SELECT role_id FROM role_user_p WHERE user_id=#{userId}
    </select>

    <update id="changeState">
        UPDATE user_p SET state=#{state} WHERE user_id IN(
          <foreach collection="userIds" item="userId" separator=",">
              #{userId}
          </foreach>
        )
    </update>

    <!--根据userId查询用户的全部模块信息 -->
    <select id="findModuleListByUserId" resultType="string">
        SELECT MODULE_NAME FROM module_p WHERE module_id IN (SELECT module_id FROM role_module_p    WHERE role_id IN (SELECT role_id FROM role_user_p WHERE user_id = #{userId}))
    </select>


</mapper>